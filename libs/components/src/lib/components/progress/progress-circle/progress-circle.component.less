@import '../../../../styles/ui-local.less';

/* Safari doesn't support rem units inside svg (but supports em units) */
@width: {
  @s: 2em;
  @m: 3em;
  //@l: 4em;
  @l: 48px;
  @xl: 7em;
};

@track-stroke: {
  @s: 0.5em;
  @m: 0.25em;
  @l: 0.25em;
  @xl: 0.25em;
};

@progress-stroke: {
  @s: 0.5em;
  @m: 0.375em;
  @l: 0.375em;
  @xl: 0.375em;
};

.circle-params(@size) {
  width: @width[@@size];
  height: @width[@@size];

  .z-track {
    /* clean-css ignore:start */
    r: ((@width[@@size] - @track-stroke[@@size]) / 2);

    /* clean-css ignore:end */
    stroke-width: @track-stroke[@@size];
  }

  .z-progress {
    @radius: ((@width[@@size] - @progress-stroke[@@size]) / 2);
    @circumference: 2 * pi() * @radius;

    /* clean-css ignore:start */
    r: @radius;

    /* clean-css ignore:end */
    stroke-width: @progress-stroke[@@size];
    stroke-dasharray: @circumference;
    stroke-dashoffset: calc(@circumference - var(--progress-percentage) * @circumference);
  }
}

:host {
  position: relative;
  display: block;
  color: var(--prizm-status-info-primary-default);
  transform: rotate(-90deg);
  transform-origin: center;
  font-size: 1rem;

  &[data-size='s'] {
    .circle-params(s);
  }

  &[data-size='m'] {
    .circle-params(m);
  }

  &[data-size='l'] {
    .circle-params(l);
  }

  &[data-size='xl'] {
    .circle-params(xl);
  }
}

.z-track {
  fill: transparent;
  stroke: var(--prizm-progress-circle-track-color, transparent);
}

.z-progress {
  fill: transparent;
  stroke: var(--prizm-progress-color, currentColor);
  transition: stroke-dashoffset var(--prizm-duration) linear;
}

.z-hidden-progress {
  position: absolute;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px;
  width: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
}

.z-svg {
  overflow: unset;
}
