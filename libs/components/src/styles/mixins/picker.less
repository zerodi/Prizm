.picker(@itemWidth, @itemHeight) {
  :host {
    display: block;
    font: var(--prizm-font-text-m);
  }

  .z-row {
    .createStackingContext();
    display: flex;
    justify-content: space-between;
    height: @itemHeight;
  }

  .z-item {
    border: 1px solid transparent;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    flex: 1;
    height: @itemHeight;
    border-radius: 2px;
    color: var(--prizm-text-icon-secondary);
    font-weight: 600;

    &:before,
    &:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: -1;
      border-radius: 2px;
    }
  }

  .z-cell {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: @itemWidth;
    text-align: center;
    outline: none;
    cursor: pointer;
    background-clip: content-box;
    box-sizing: border-box;

    &_today {
      border-radius: 2px;

      &[data-state='hovered'] {
        & > .z-item {
          border-color: var(--prizm-button-primary-solid-hover);
          color: var(--prizm-button-primary-solid-hover);
          background-color: var(--prizm-button-ghost-hover);
        }
      }

      .z-item {
        border-color: var(--prizm-button-primary-solid-default);
        color: var(--prizm-button-primary-solid-default);
        width: @itemWidth;

        &_unavailable {
          color: var(--prizm-text-icon-disable);
        }
      }
    }

    &:before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: -1;
      border-radius: 2px;
    }

    &_interval {
      & > .z-item {
        border-color: var(--prizm-button-primary-ghost-active);
      }
      &:before {
        background: var(--prizm-button-primary-ghost-active);
        border-radius: unset;

        :host._single & {
          background-color: var(--prizm-button-primary-ghost-active);
        }
      }

      &:last-child:first-child:before {
        right: 0;
      }

      &:first-child > .z-item {
        border-top-left-radius: 2px;
        border-bottom-left-radius: 2px;
      }

      &:last-child > .z-item {
        border-top-right-radius: 2px;
        border-bottom-right-radius: 2px;
      }

      & > .z-item {
        border-radius: 0;
        color: var(--prizm-button-primary-solid-default);
      }

      &[data-range='start'] > .z-item:before,
      &[data-range='start'] > .z-item:after {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }

      &[data-range='end'] > .z-item:before,
      &[data-range='end'] > .z-item:after {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
    }

    &[data-range] {
      &:not([data-state='hovered']) > .z-item {
        color: var(--prizm-text-icon-exception);
        border-color: var(--prizm-button-primary-solid-default);

        &:before,
        &:after {
          background-color: var(--prizm-button-primary-solid-default);
        }
      }

      &[data-state='hovered'] > .z-item {
        background-color: var(--prizm-button-ghost-hover);
        color: var(--prizm-button-primary-solid-hover);
        border-color: var(--prizm-button-ghost-hover);
      }

      &[data-state='hovered'] > .z-item:before,
      &[data-state='hovered'] > .z-item:after {
        background-color: var(--prizm-button-ghost-hover);
        color: var(--prizm-button-primary-solid-hover);
      }

      &[data-state='pressed'] > .z-item:before,
      &[data-state='pressed'] > .z-item:after {
        background-color: var(--prizm-button-primary-solid-default);
      }
    }

    // TODO uncomment if we want to add arrows for start day
    //&[data-range='end'] > .z-item {
    //    &:before {
    //        left: 0.25rem;
    //    }
    //
    //    &:after {
    //        left: -2rem;
    //        right: 100%;
    //        transform: translateX(1.4375rem) scaleY(0.6) scaleX(0.4) rotate(45deg);
    //    }
    //}

    // TODO uncomment if we want to add arrows for end day
    //&[data-range='start'] > .z-item {
    //    &:before {
    //        right: 0.25rem;
    //    }
    //
    //    &:after {
    //        left: 100%;
    //        right: -2rem;
    //        transform: translateX(-1.4375rem) scaleY(0.6) scaleX(0.4) rotate(45deg);
    //    }
    //}

    &[data-state='disabled'] {
      pointer-events: none;
      cursor: not-allowed;

      & > .z-item {
        text-decoration: line-through;
        opacity: 0.3;
      }
    }

    &[data-state='hovered']:not([data-range]):not(.z-cell_today) > .z-item {
      background-color: var(--prizm-button-ghost-hover);
      border-color: var(--prizm-button-ghost-hover);
      color: var(--prizm-button-primary-solid-hover);
    }

    &[data-state='pressed']:hover:not([data-range]) > .z-item {
      background-color: var(--prizm-button-primary-solid-default);
      border-radius: 2px;
      color: var(--prizm-text-icon-exception);
    }
  }
}
